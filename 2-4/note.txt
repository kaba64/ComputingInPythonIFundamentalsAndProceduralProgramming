Assignment Operator: An operator that takes the output of an expression and assigns it to a variable.

Mathematical Operators: Operators that mimic basic mathematical functions, like addition and multiplication.

Modulus: The remainder function, returns the remainder of one number divided by another.



len(): A function that takes as input a variable with a length, such as a string of characters or a list of items, and returns its length.

As we'll see soon, Python specifically supplies two additional operators:

    Floor division, represented by a double-slash (//), which is division that rounds down to the nearest whole number. For example, 5 // 2 would be 2, because 5 divided by 2 is 2.5, which is rounded down to the nearest integer, 2.
    Exponentiation, represented by a double-asterisk (**), which raises the first number to the second number. For example, 5 ** 2 would be 25, because 5 raised to the 2nd power is 25.




To look ahead, Python's seven basic operators are:

-Addition, represented by a plus sign (+). For example, 7 + 4 = 11.

-Subtraction, represented by a minus sign (-). For example, 7 - 4 = 3.

-Multiplication, represented by an asterisk (*). For example, 7 * 4 = 28.

-Division, represented by a forward-slash (/). For example, 7 / 4 = 1.75.

-Modulus or remainder, represented by a percent sign (%). For example, 7 % 4 = 3 (because the remainder of 7 over 4 is 3).

-Floor division, represented by a double-forward-slash (//). For example, 7 // 4 = 1 (because 7 over 4 is 1.75, which is rounded down to 1). The result will be an integer.

-Exponentiation, represented by a double-asterisk (**). For example, 7 ** 4 = 2401.


The result of the division will be a real number.

Depending on your code, unclosed parentheses can actually manifest as other kinds of errors. That's part of what makes them difficult to uncover. 
